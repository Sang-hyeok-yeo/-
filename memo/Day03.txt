연산자
   기능이 있는 특수문자

연산자의 우선순위
   최우선 연산자
   단항 연산자
   산술 연산자
   쉬프트 연산자
   관계 연산자
   논리 연산자
   삼항 연산자
   대입 연산자

결합성
   하나의 수식에 동일한 연산자가 여러 개 사용되면 알맞은 방향으로 결합되어 연산되는 성질

비트 연산
   논리 연산자
      & (AND, 논리곱), A & B, 두 비트가 모두 1이면 1
      | (OR, 논리합), A | B, 둘 중 하나라도 1이면 1
      ^ (XOR, 배타논리합), A ^ B, 두 비트가 서로 달라야 1
   단항 연산자
      ~ (NOT, 논리부정), ~A, 0은 1로 1은 0으로 변경, ~a = -a-1

   쉬프트 연산자(이동)
      << (LEFT SHIFT, 좌쉬프트), A << B, A를 왼쪽으로 B만큼 비트이동
      >> (RIGHT SHIFT, 우쉬프트), A >> B, A를 오른쪽으로 B만큼 비트이동
----------------------------------------------------------------------------
논리형(boolean)
   참 : true
   거짓 : false

논리형   boolean      1byte   true,false
-------------------------------------------------------------------
조건식
   결과가 참 또는 거짓, 둘 중 하나가 나오는 식

   관계 연산자
      ==   : 같다
      !=   : 같지 않다
      >, <   : 초과, 미만
      >=, <=   : 이상, 이하

   논리 연산자
      &&, A && B, 두 조건식 모두 참이면 참
      ||, A || B, 둘 중 하나라도 참이면 참

   단항 연산자
      !(NOT), !A, 조건식이 참이면 거짓으로, 거짓이면 참으로 변경
--------------------------------------------------------------------
삼항 연산자( : ? ) : 값으로 봐야한다!
   조건식 ? 참 : 거짓
   int data = 10 > 9 ? 10 : 9;
   단, 참과 거짓 자리에는 값만 작성할 수 있다.

삼항 연산자를 사용할 때
   조건식이 단 한 개만 존재할 때 사용한다.
---------------------------------------------------------------
제어문
▶ 조건문
▷ if문

   if(조건식){
      실행할 문장;
   }
   위 조건식에 상관없이 모두 검사
   if(조건식){
      실행할 문장;
   }
   if(조건식){
      실행할 문장;
   }...


   if(조건식){
      실행할 문장;
   }
   위 조건식이 참이 아니면 다음 조건식 검사, 참이면 다음 조건식들은 검사하지 않는다.
   else if(조건식){
      실행할 문장;
   }
   else if(조건식){
      실행할 문장;
   }
   ...
   else {
      실행할 문장;
   }


▷ switch문

   switch(변수명){
   case 값1:
      실행할 문장;
      break;
   case 값2:
      실행할 문장;
      break;
   case 값3:
      실행할 문장;
      break;
   case 값4:
      실행할 문장;
      break;
   ...
   default:
      실행할 문장;
      break;
   }

삼항 연산자, if문, switch문의 비교
   삼항 연산자 : 조건식이 1개 있을 경우 사용
   if문 : 조건식에 비교(>, <, >=, <=)연산자를 사용하거나, 여러 개의 조건식을 논리 연산자(&&, ||)로 연결할 때 사용
   switch문 : 하나의 변수에 여러 개의 값이 담길 수 있고, 각 값이 같은 지를 비교할 때 사용
--------------------------------------------------------------------------------------------------
대입 연산자(복합 대입 연산자, 누적 연산자)
   +=, -=, /=, *=, %=,...

   int money = 10000;
   //money = money - 1000;
   money -= 1000;
   System.out.println(돈);

   int data = 10;
   //data = data + 1;
   //data += 1;
   data++;
   System.out.println(data);

증감 연산자
   ++, --

   전위형 : 해당 라인부터 바로 적용
      ++data
   후위형 : 다음 라인부터 적용
      data++
---------------------------------------------------------------
▶ 반복문
   
▷ for

   for(초기식; 조건식; 증감식){
      실행할 문장;
   }







▷ while
▷ do~while






